apiVersion: apps/v1
kind: Deployment
metadata:
  name: poliom-backend
  namespace: poliom-hr
  labels:
    app: poliom-backend
    version: v1.0.0
    tier: backend
spec:
  replicas: 2  # Будет заменено скриптом в зависимости от конфигурации
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: poliom-backend
  template:
    metadata:
      labels:
        app: poliom-backend
        version: v1.0.0
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: poliom-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: backend
        image: your-registry/poliom-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: POSTGRES_HOST
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: POSTGRES_DB
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: POSTGRES_PORT
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: poliom-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: poliom-secrets
              key: POSTGRES_PASSWORD
        - name: S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: S3_ENDPOINT
        - name: S3_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: S3_BUCKET_NAME
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: poliom-secrets
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: poliom-secrets
              key: S3_SECRET_KEY
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: REDIS_PORT
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: poliom-secrets
              key: JWT_SECRET
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: LOG_LEVEL
        - name: CONFIG_SIZE
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: CONFIG_SIZE
        resources:
          requests:
            memory: "384Mi"  # Будет заменено скриптом
            cpu: "150m"      # Будет заменено скриптом
          limits:
            memory: "768Mi"  # Будет заменено скриптом
            cpu: "300m"      # Будет заменено скриптом
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-log
          mountPath: /var/log
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-log
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - poliom-backend
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: poliom-backend-service
  namespace: poliom-hr
  labels:
    app: poliom-backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: poliom-backend
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: poliom-service-account
  namespace: poliom-hr
  labels:
    app: poliom-hr
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: poliom-hr
  name: poliom-role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: poliom-rolebinding
  namespace: poliom-hr
subjects:
- kind: ServiceAccount
  name: poliom-service-account
  namespace: poliom-hr
roleRef:
  kind: Role
  name: poliom-role
  apiGroup: rbac.authorization.k8s.io 