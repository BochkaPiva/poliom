apiVersion: apps/v1
kind: Deployment
metadata:
  name: poliom-frontend
  namespace: poliom-hr
  labels:
    app: poliom-frontend
    version: v1.0.0
    tier: frontend
spec:
  replicas: 1  # Будет заменено скриптом в зависимости от конфигурации
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: poliom-frontend
  template:
    metadata:
      labels:
        app: poliom-frontend
        version: v1.0.0
        tier: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: poliom-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 101  # nginx user
        fsGroup: 101
      containers:
      - name: frontend
        image: your-registry/poliom-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        env:
        - name: BACKEND_URL
          value: "http://poliom-backend-service:8000"
        - name: API_BASE_URL
          value: "/api"
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: ENVIRONMENT
        - name: CONFIG_SIZE
          valueFrom:
            configMapKeyRef:
              name: poliom-config
              key: CONFIG_SIZE
        resources:
          requests:
            memory: "192Mi"  # Будет заменено скриптом
            cpu: "75m"       # Будет заменено скриптом
          limits:
            memory: "384Mi"  # Будет заменено скриптом
            cpu: "150m"      # Будет заменено скриптом
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-pid
          mountPath: /var/run
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-pid
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - poliom-frontend
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: poliom-frontend-service
  namespace: poliom-hr
  labels:
    app: poliom-frontend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: poliom-frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: poliom-ingress
  namespace: poliom-hr
  labels:
    app: poliom-hr
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - your-domain.com  # Замените на ваш домен
    secretName: poliom-tls
  rules:
  - host: your-domain.com  # Замените на ваш домен
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: poliom-backend-service
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: poliom-frontend-service
            port:
              number: 80 