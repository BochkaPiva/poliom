#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
"""

import os
import sys
from pathlib import Path
from dotenv import load_dotenv
from sqlalchemy import create_engine, text

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
current_dir = Path(__file__).parent
load_dotenv(current_dir / '.env.local')

# –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = os.getenv("DATABASE_URL")
engine = create_engine(DATABASE_URL)

def quick_delete_document(document_id):
    """–ë—ã—Å—Ç—Ä–æ —É–¥–∞–ª—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç —á–µ—Ä–µ–∑ SQL"""
    with engine.connect() as conn:
        # –ù–∞—á–∏–Ω–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        trans = conn.begin()
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ
            doc_result = conn.execute(
                text("SELECT title, file_path FROM documents WHERE id = :doc_id"),
                {"doc_id": document_id}
            )
            doc_info = doc_result.fetchone()
            
            if not doc_info:
                print(f"‚ùå –î–æ–∫—É–º–µ–Ω—Ç —Å ID {document_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
            
            title, file_path = doc_info
            print(f"üìÑ –ù–∞–π–¥–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç: {title}")
            print(f"   –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: {file_path}")
            
            # –£–¥–∞–ª—è–µ–º —á–∞–Ω–∫–∏
            chunks_result = conn.execute(
                text("DELETE FROM document_chunks WHERE document_id = :doc_id"),
                {"doc_id": document_id}
            )
            deleted_chunks = chunks_result.rowcount
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —á–∞–Ω–∫–æ–≤: {deleted_chunks}")
            
            # –£–¥–∞–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            doc_delete_result = conn.execute(
                text("DELETE FROM documents WHERE id = :doc_id"),
                {"doc_id": document_id}
            )
            
            if doc_delete_result.rowcount > 0:
                # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å –¥–∏—Å–∫–∞
                try:
                    file_path_obj = Path(file_path)
                    if file_path_obj.exists():
                        file_path_obj.unlink()
                        print(f"‚úÖ –§–∞–π–ª —É–¥–∞–ª–µ–Ω: {file_path}")
                    else:
                        print(f"‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
                except Exception as e:
                    print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
                
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
                trans.commit()
                print(f"üéâ –î–æ–∫—É–º–µ–Ω—Ç {document_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")
                return True
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç {document_id}")
                trans.rollback()
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            trans.rollback()
            return False

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python quick_delete.py <document_id>")
        sys.exit(1)
    
    try:
        document_id = int(sys.argv[1])
        quick_delete_document(document_id)
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –¥–æ–∫—É–º–µ–Ω—Ç–∞")
        sys.exit(1) 