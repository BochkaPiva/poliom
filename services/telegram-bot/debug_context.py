#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–≥–æ –≤ LLM
"""

import sys
import asyncio
from pathlib import Path
import os
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
root_dir = Path(__file__).parent.parent.parent
sys.path.append(str(root_dir))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
env_path = root_dir / '.env'
load_dotenv(env_path)

try:
    from services.shared.config import Config
    from services.shared.database import Database
    from services.bot.rag_service import RAGService
    print("‚úÖ –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

async def main():
    """–û—Ç–ª–∞–¥–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è LLM"""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        config = Config()
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        db = Database(config)
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")
        
        rag_service = RAGService(config, db)
        print("‚úÖ RAG —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–∏—Å–∫ —á–∞–Ω–∫–æ–≤ —Å –¥–∞—Ç–∞–º–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print("\nüîç –ü–û–ò–°–ö –ß–ê–ù–ö–û–í –° –î–ê–¢–ê–ú–ò –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
        print("=" * 80)
        
        cursor = db.connection.cursor()
        
        # –ò—â–µ–º —á–∞–Ω–∫–∏ —Å "15" –∏ —Å–ª–æ–≤–∞–º–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å –∞–≤–∞–Ω—Å–æ–º
        cursor.execute('''
            SELECT id, document_id, content 
            FROM document_chunks 
            WHERE content ILIKE '%15%' 
            AND (content ILIKE '%–∞–≤–∞–Ω—Å%' OR content ILIKE '%—á–∏—Å–ª–æ%' OR content ILIKE '%–¥–∞—Ç–∞%')
            ORDER BY id
        ''')
        
        results = cursor.fetchall()
        print(f'–ù–∞–π–¥–µ–Ω–æ {len(results)} —á–∞–Ω–∫–æ–≤ —Å "15":')
        for chunk_id, doc_id, content in results:
            print(f'\n–ß–∞–Ω–∫ {chunk_id} (–î–æ–∫—É–º–µ–Ω—Ç {doc_id}):')
            print(content[:300] + '...' if len(content) > 300 else content)
            print('-' * 40)
            
        # –ò—â–µ–º —á–∞–Ω–∫–∏ —Å "25" –∏ —Å–ª–æ–≤–∞–º–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π
        cursor.execute('''
            SELECT id, document_id, content 
            FROM document_chunks 
            WHERE content ILIKE '%25%' 
            AND (content ILIKE '%–∑–∞—Ä–ø–ª–∞—Ç%' OR content ILIKE '%—á–∏—Å–ª–æ%' OR content ILIKE '%–¥–∞—Ç–∞%')
            ORDER BY id
        ''')
        
        results2 = cursor.fetchall()
        print(f'\n–ù–∞–π–¥–µ–Ω–æ {len(results2)} —á–∞–Ω–∫–æ–≤ —Å "25":')
        for chunk_id, doc_id, content in results2:
            print(f'\n–ß–∞–Ω–∫ {chunk_id} (–î–æ–∫—É–º–µ–Ω—Ç {doc_id}):')
            print(content[:300] + '...' if len(content) > 300 else content)
            print('-' * 40)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ–ø—Ä–æ—Å
        question = "–ö–æ–≥–¥–∞ –≤—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –∞–≤–∞–Ω—Å?"
        print(f"\nüîç –û–¢–õ–ê–î–ö–ê –í–û–ü–†–û–°–ê: {question}")
        print("=" * 80)
        
        answer = await rag_service.answer_question(question)
        
        print(f"\nü§ñ –ü–û–õ–£–ß–ê–ï–ú –û–¢–í–ï–¢ –û–¢ LLM...")
        print("=" * 80)
        print(f"–û–¢–í–ï–¢ LLM:\n{answer}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(main()) 