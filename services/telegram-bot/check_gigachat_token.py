#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑ —Ç–æ–∫–µ–Ω–∞ GigaChat
"""

import sys
import os
import base64
import json
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
project_root = Path(__file__).parent.parent.parent
env_path = project_root / '.env'
load_dotenv(env_path)

def analyze_gigachat_token():
    """–ê–Ω–∞–ª–∏–∑ —Ç–æ–∫–µ–Ω–∞ GigaChat"""
    
    print("üîç –ê–ù–ê–õ–ò–ó –¢–û–ö–ï–ù–ê GIGACHAT")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    gigachat_key = os.getenv("GIGACHAT_API_KEY")
    
    if not gigachat_key:
        print("‚ùå GIGACHAT_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    print(f"‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω")
    print(f"üìè –î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞: {len(gigachat_key)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üî§ –ü–µ—Ä–≤—ã–µ 20 —Å–∏–º–≤–æ–ª–æ–≤: {gigachat_key[:20]}...")
    print(f"üî§ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å–∏–º–≤–æ–ª–æ–≤: ...{gigachat_key[-20:]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–º Base64
    try:
        decoded = base64.b64decode(gigachat_key)
        decoded_str = decoded.decode('utf-8')
        print(f"‚úÖ –¢–æ–∫–µ–Ω —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º Base64")
        print(f"üìù –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ: {decoded_str}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å client_id:client_secret)
        if ':' in decoded_str:
            client_id, client_secret = decoded_str.split(':', 1)
            print(f"üÜî Client ID: {client_id}")
            print(f"üîê Client Secret: {client_secret[:10]}...")
        else:
            print("‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è Base64: {e}")
        return False
    
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ GigaChat")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ GigaChat API")
    print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω")
    
    return True

def show_token_generation_guide():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é —Ç–æ–∫–µ–Ω–∞"""
    
    print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ü–û–õ–£–ß–ï–ù–ò–Æ –¢–û–ö–ï–ù–ê GIGACHAT:")
    print("=" * 60)
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://developers.sber.ru/portal/products/gigachat")
    print("2. –í–æ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
    print("3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ")
    print("4. –ü–æ–ª—É—á–∏—Ç–µ Authorization Data (Base64)")
    print("5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ .env —Ñ–∞–π–ª –∫–∞–∫ GIGACHAT_API_KEY")
    print("\n‚ö†Ô∏è –í–ê–ñ–ù–û: –¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ Base64!")

if __name__ == "__main__":
    success = analyze_gigachat_token()
    show_token_generation_guide()
    
    if not success:
        sys.exit(1) 