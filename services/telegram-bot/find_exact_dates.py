#!/usr/bin/env python3
"""
–ü–æ–∏—Å–∫ —á–∞–Ω–∫–æ–≤ —Å —Ç–æ—á–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏ –≤—ã–ø–ª–∞—Ç
"""

import sys
import asyncio
from pathlib import Path
import os
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –º–æ–¥—É–ª—è–º
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root / "shared"))
sys.path.insert(0, str(project_root / "services" / "telegram-bot"))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(project_root / ".env")
load_dotenv(project_root / "services" / "telegram-bot" / ".env.local")

try:
    from bot.rag_service import RAGService
    from bot.config import Config
    from bot.database import get_db_session
    print("‚úÖ –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

async def main():
    """–ü–æ–∏—Å–∫ —á–∞–Ω–∫–æ–≤ —Å –¥–∞—Ç–∞–º–∏"""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = Config()
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º RAG —Å–µ—Ä–≤–∏—Å
        rag_service = RAGService(config.GIGACHAT_API_KEY)
        await rag_service.initialize()
        print("‚úÖ RAG —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä—è–º–æ–π –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print("\nüîç –ü–û–ò–°–ö –ß–ê–ù–ö–û–í –° –î–ê–¢–ê–ú–ò –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
        print("=" * 80)
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–ø—Ä—è–º—É—é
        db_session = next(get_db_session())
        
        # –ü–æ–∏—Å–∫ —á–∞–Ω–∫–æ–≤ —Å "15"
        from sqlalchemy import text
        
        query = text("""
            SELECT dc.id, dc.document_id, dc.content, d.title
            FROM document_chunks dc
            JOIN documents d ON dc.document_id = d.id
            WHERE dc.content ILIKE '%15%'
            AND (dc.content ILIKE '%—á–∏—Å–ª–æ%' OR dc.content ILIKE '%–¥–∞—Ç–∞%' OR dc.content ILIKE '%–∞–≤–∞–Ω—Å%')
            ORDER BY dc.id
        """)
        
        result = db_session.execute(query)
        chunks_15 = result.fetchall()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(chunks_15)} —á–∞–Ω–∫–æ–≤ —Å '15':")
        for chunk in chunks_15:
            print(f"\n–ß–∞–Ω–∫ {chunk.id} (–î–æ–∫—É–º–µ–Ω—Ç: {chunk.title}):")
            print(chunk.content[:400] + "..." if len(chunk.content) > 400 else chunk.content)
            print("-" * 60)
        
        # –ü–æ–∏—Å–∫ —á–∞–Ω–∫–æ–≤ —Å "25"
        query = text("""
            SELECT dc.id, dc.document_id, dc.content, d.title
            FROM document_chunks dc
            JOIN documents d ON dc.document_id = d.id
            WHERE dc.content ILIKE '%25%'
            AND (dc.content ILIKE '%—á–∏—Å–ª–æ%' OR dc.content ILIKE '%–¥–∞—Ç–∞%' OR dc.content ILIKE '%–∑–∞—Ä–ø–ª–∞—Ç%')
            ORDER BY dc.id
        """)
        
        result = db_session.execute(query)
        chunks_25 = result.fetchall()
        
        print(f"\n–ù–∞–π–¥–µ–Ω–æ {len(chunks_25)} —á–∞–Ω–∫–æ–≤ —Å '25':")
        for chunk in chunks_25:
            print(f"\n–ß–∞–Ω–∫ {chunk.id} (–î–æ–∫—É–º–µ–Ω—Ç: {chunk.title}):")
            print(chunk.content[:400] + "..." if len(chunk.content) > 400 else chunk.content)
            print("-" * 60)
        
        # –ü–æ–∏—Å–∫ —á–∞–Ω–∫–æ–≤ —Å–æ —Å–ª–æ–≤–∞–º–∏ "–≤—ã–ø–ª–∞—Ç–∞" –∏ "—Å—Ä–æ–∫"
        query = text("""
            SELECT dc.id, dc.document_id, dc.content, d.title
            FROM document_chunks dc
            JOIN documents d ON dc.document_id = d.id
            WHERE (dc.content ILIKE '%—Å—Ä–æ–∫%–≤—ã–ø–ª–∞—Ç%' OR dc.content ILIKE '%–¥–∞—Ç–∞%–≤—ã–ø–ª–∞—Ç%')
            ORDER BY dc.id
        """)
        
        result = db_session.execute(query)
        chunks_dates = result.fetchall()
        
        print(f"\n–ù–∞–π–¥–µ–Ω–æ {len(chunks_dates)} —á–∞–Ω–∫–æ–≤ —Å–æ —Å—Ä–æ–∫–∞–º–∏ –≤—ã–ø–ª–∞—Ç:")
        for chunk in chunks_dates:
            print(f"\n–ß–∞–Ω–∫ {chunk.id} (–î–æ–∫—É–º–µ–Ω—Ç: {chunk.title}):")
            print(chunk.content[:400] + "..." if len(chunk.content) > 400 else chunk.content)
            print("-" * 60)
        
        # –ü–æ–∏—Å–∫ —á–∞–Ω–∫–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ç—Ä—É–¥–æ–≤–æ–≥–æ —Ä–∞—Å–ø–æ—Ä—è–¥–∫–∞
        query = text("""
            SELECT dc.id, dc.document_id, dc.content, d.title
            FROM document_chunks dc
            JOIN documents d ON dc.document_id = d.id
            WHERE dc.content ILIKE '%–ø—Ä–∞–≤–∏–ª%–≤–Ω—É—Ç—Ä–µ–Ω–Ω%—Ç—Ä—É–¥–æ–≤%—Ä–∞—Å–ø–æ—Ä—è–¥–∫%'
            OR dc.content ILIKE '%–ü–í–¢–†%'
            ORDER BY dc.id
        """)
        
        result = db_session.execute(query)
        chunks_pvtr = result.fetchall()
        
        print(f"\n–ù–∞–π–¥–µ–Ω–æ {len(chunks_pvtr)} —á–∞–Ω–∫–æ–≤ —Å –ü–í–¢–†:")
        for chunk in chunks_pvtr:
            print(f"\n–ß–∞–Ω–∫ {chunk.id} (–î–æ–∫—É–º–µ–Ω—Ç: {chunk.title}):")
            print(chunk.content[:400] + "..." if len(chunk.content) > 400 else chunk.content)
            print("-" * 60)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(main()) 