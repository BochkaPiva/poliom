#!/usr/bin/env python3
"""
–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –ë–ï–ó Docker
–î–ª—è —Å–ª—É—á–∞–µ–≤ –∫–æ–≥–¥–∞ Docker –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑-–∑–∞ –Ω–µ—Ö–≤–∞—Ç–∫–∏ –º–µ—Å—Ç–∞
"""

import subprocess
import sys
import os

def install_requirements():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    requirements = [
        "fastapi==0.104.1",
        "uvicorn==0.24.0", 
        "python-multipart==0.0.6",
        "jinja2==3.1.2",
        "aiofiles==23.2.0"
    ]
    
    for req in requirements:
        print(f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é {req}...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", req])

def create_minimal_app():
    """–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    app_code = '''
from fastapi import FastAPI, Request
from fastapi.responses import HTMLResponse
from fastapi.templating import Jinja2Templates

app = FastAPI(title="RAG Admin Panel - Emergency Mode")

@app.get("/", response_class=HTMLResponse)
async def root():
    return """
    <html>
        <head><title>RAG Admin Panel - Emergency Mode</title></head>
        <body>
            <h1>üö® RAG Admin Panel - Emergency Mode</h1>
            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> –†–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ (–±–µ–∑ Docker)</p>
            <p><strong>–ü–æ—Ä—Ç:</strong> 8001</p>
            <p><strong>–†–µ–∂–∏–º:</strong> –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª</p>
            <hr>
            <h2>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</h2>
            <ul>
                <li>‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–∞–±–æ—Ç–∞–µ—Ç</li>
                <li>‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (—Ç—Ä–µ–±—É–µ—Ç Docker)</li>
                <li>‚ùå ML-—Ñ—É–Ω–∫—Ü–∏–∏ (—Ç—Ä–µ–±—É—é—Ç –±–æ–ª—å—à–µ –º–µ—Å—Ç–∞)</li>
                <li>‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (—Ç—Ä–µ–±—É–µ—Ç Docker)</li>
            </ul>
            <hr>
            <p><em>–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Docker</em></p>
        </body>
    </html>
    """

@app.get("/health")
async def health():
    return {"status": "ok", "mode": "emergency", "docker": False}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8001)
'''
    
    with open("emergency_app.py", "w", encoding="utf-8") as f:
        f.write(app_code)

def main():
    print("üö® –≠–ö–°–¢–†–ï–ù–ù–´–ô –ó–ê–ü–£–°–ö RAG ADMIN PANEL")
    print("=" * 50)
    
    try:
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        install_requirements()
        
        print("2. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        create_minimal_app()
        
        print("3. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
        print("üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞: http://localhost:8001")
        print("‚ö†Ô∏è  –≠—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ Docker")
        print("üíæ –û—Å–≤–æ–±–æ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞")
        
        subprocess.run([sys.executable, "emergency_app.py"])
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ")

if __name__ == "__main__":
    main() 