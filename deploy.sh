#!/bin/bash

# ===========================================
# POLIOM HR ASSISTANT DEPLOYMENT SCRIPT
# ===========================================

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π POLIOM HR Assistant..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
if [ ! -f ".env.production" ]; then
    echo "‚ùå –§–∞–π–ª .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.production.example –≤ .env.production –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è"
    exit 1
fi

if [ ! -f "docker-compose.prod.yml" ]; then
    echo "‚ùå –§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo "‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
export $(grep -v '^#' .env.production | xargs)

echo "üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è POLIOM HR Assistant:"
echo "  - –û–∫—Ä—É–∂–µ–Ω–∏–µ: $ENVIRONMENT"
echo "  - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${DATABASE_URL%%@*}@***"
echo "  - Redis: ${REDIS_URL%%@*}@***"
echo "  - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –ø–æ—Ä—Ç: ${ADMIN_PANEL_PORT:-8000}"
echo "  - Telegram –±–æ—Ç: ${TELEGRAM_BOT_TOKEN:0:10}***"
echo "  - GigaChat API: ${GIGACHAT_API_KEY:0:10}***"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã POLIOM..."
docker-compose -f docker-compose.prod.yml --env-file .env.production down --remove-orphans

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ Docker –æ–±—Ä–∞–∑—ã? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."
    docker system prune -f
    docker image prune -f
fi

# –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã
echo "üî® –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã –¥–ª—è POLIOM HR Assistant..."
docker-compose -f docker-compose.prod.yml --env-file .env.production build --no-cache

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã POLIOM HR Assistant..."
docker-compose -f docker-compose.prod.yml --env-file .env.production up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.prod.yml --env-file .env.production ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
echo "üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤ POLIOM..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
ADMIN_PORT=${ADMIN_PANEL_PORT:-8000}
if curl -f http://localhost:$ADMIN_PORT/ > /dev/null 2>&1; then
    echo "‚úÖ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å POLIOM –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ –ø–æ—Ä—Ç—É $ADMIN_PORT"
else
    echo "‚ùå –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    echo "üìã –õ–æ–≥–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:"
    docker-compose -f docker-compose.prod.yml --env-file .env.production logs admin-panel --tail=20
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –±–æ—Ç–∞
if docker-compose -f docker-compose.prod.yml --env-file .env.production exec -T telegram-bot python -c "import sys; sys.exit(0)" > /dev/null 2>&1; then
    echo "‚úÖ Telegram –±–æ—Ç POLIOM —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Telegram –±–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üìã –õ–æ–≥–∏ Telegram –±–æ—Ç–∞:"
    docker-compose -f docker-compose.prod.yml --env-file .env.production logs telegram-bot --tail=20
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Celery worker
if docker-compose -f docker-compose.prod.yml --env-file .env.production exec -T celery-worker celery -A celery_app inspect ping > /dev/null 2>&1; then
    echo "‚úÖ Celery worker —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Celery worker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üìã –õ–æ–≥–∏ Celery worker:"
    docker-compose -f docker-compose.prod.yml --env-file .env.production logs celery-worker --tail=20
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Redis
if docker-compose -f docker-compose.prod.yml --env-file .env.production exec -T redis redis-cli ping > /dev/null 2>&1; then
    echo "‚úÖ Redis —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üìã –õ–æ–≥–∏ Redis:"
    docker-compose -f docker-compose.prod.yml --env-file .env.production logs redis --tail=20
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ POLIOM HR Assistant:"
echo "--- Telegram Bot ---"
docker-compose -f docker-compose.prod.yml --env-file .env.production logs telegram-bot --tail=10

echo "--- Admin Panel ---"
docker-compose -f docker-compose.prod.yml --env-file .env.production logs admin-panel --tail=10

echo "--- Celery Worker ---"
docker-compose -f docker-compose.prod.yml --env-file .env.production logs celery-worker --tail=10

echo "--- Redis ---"
docker-compose -f docker-compose.prod.yml --env-file .env.production logs redis --tail=10

echo ""
echo "üéâ –î–µ–ø–ª–æ–π POLIOM HR Assistant –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo ""
echo "üìä –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –õ–æ–≥–∏:                docker-compose -f docker-compose.prod.yml logs -f [service_name]"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:          docker-compose -f docker-compose.prod.yml restart [service_name]"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:           docker-compose -f docker-compose.prod.yml down"
echo "  –°—Ç–∞—Ç—É—Å:              docker-compose -f docker-compose.prod.yml ps"
echo ""
echo "üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å POLIOM: http://localhost:$ADMIN_PORT"
echo "ü§ñ Telegram –±–æ—Ç POLIOM –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
echo "üí¨ GigaChat –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞!"
echo ""
echo "‚ú® POLIOM HR Assistant —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç!" 